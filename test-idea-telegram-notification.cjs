// –¢–µ—Å—Ç Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∏–¥–µ–π
console.log('üí° Testing Idea Suggestion Telegram Notifications');

async function testTelegramEdgeFunction() {
  console.log('\n=== –¢–ï–°–¢: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ Edge Function ===');
  
  try {
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –æ—Ç database trigger
    const testIdea = {
      id: 'test-' + Date.now(),
      title: 'Test Idea from Script',
      description: 'This is a test idea to verify Telegram notifications are working correctly.',
      category: 'new_agent',
      priority: 'medium',
      user_id: 'test-user-123',
      created_at: new Date().toISOString()
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∏–¥–µ—é:', {
      id: testIdea.id,
      title: testIdea.title,
      category: testIdea.category
    });

    const response = await fetch('https://sgzlhcagtesjazvwskjw.supabase.co/functions/v1/telegram-notify', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNnemxoY2FndGVzamF6dndza2p3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mjc4NjE2NDIsImV4cCI6MjA0MzQzNzY0Mn0.NsGMxGv7K_3F_rO7QzxBpBtYJSWmGP0r80qLZGmZbag' // anon key
      },
      body: JSON.stringify({
        record: testIdea
      })
    });

    console.log('üìä Response Status:', response.status);
    console.log('üìä Response Headers:', Object.fromEntries(response.headers.entries()));

    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ Edge Function –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ:', result);
      return true;
    } else {
      const errorText = await response.text();
      console.log('‚ùå Edge Function –æ—à–∏–±–∫–∞:', response.status, errorText);
      return false;
    }
  } catch (error) {
    console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ Edge Function:', error.message);
    return false;
  }
}

async function checkSupabaseTrigger() {
  console.log('\n=== –ü–†–û–í–ï–†–ö–ê: Database Trigger ===');
  
  try {
    const fs = require('fs');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª trigger migration
    const triggerMigrationExists = fs.existsSync('/workspace/supabase/migrations/20250120000000_add_telegram_trigger.sql');
    console.log('‚úÖ Trigger Migration File:', triggerMigrationExists ? '–°–£–©–ï–°–¢–í–£–ï–¢' : '–ù–ï –ù–ê–ô–î–ï–ù');
    
    if (triggerMigrationExists) {
      const triggerContent = fs.readFileSync('/workspace/supabase/migrations/20250120000000_add_telegram_trigger.sql', 'utf8');
      const hasNotifyFunction = triggerContent.includes('notify_idea_suggestion');
      const hasTrigger = triggerContent.includes('AFTER INSERT') && triggerContent.includes('idea_suggestions');
      
      console.log('‚úÖ Notify Function –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞:', hasNotifyFunction ? '–î–ê' : '–ù–ï–¢');
      console.log('‚úÖ INSERT Trigger –Ω–∞—Å—Ç—Ä–æ–µ–Ω:', hasTrigger ? '–î–ê' : '–ù–ï–¢');
      
      if (hasNotifyFunction && hasTrigger) {
        console.log('üéâ Database Trigger –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
        console.log('üìù –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤ idea_suggestions –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∑–æ–≤–µ—Ç—Å—è Edge Function');
        return true;
      }
    }
    
    return false;
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Database Trigger:', error.message);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
async function runIdeaTelegramTests() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∏–¥–µ–π...\\n');
  
  const edgeFunctionTest = await testTelegramEdgeFunction();
  const triggerTest = await checkSupabaseTrigger();
  
  console.log('\\n' + '='.repeat(60));
  console.log('üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø IDEA TELEGRAM NOTIFICATIONS');
  console.log('='.repeat(60));
  
  console.log('‚úÖ Edge Function —Ç–µ—Å—Ç:', edgeFunctionTest ? '–†–ê–ë–û–¢–ê–ï–¢' : '–ù–ï –†–ê–ë–û–¢–ê–ï–¢');
  console.log('‚úÖ Database Trigger:', triggerTest ? '–ù–ê–°–¢–†–û–ï–ù' : '–ù–ï –ù–ê–°–¢–†–û–ï–ù');
  
  if (edgeFunctionTest && triggerTest) {
    console.log('\\nüéâ –£–°–ü–ï–•: Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∏–¥–µ–π —Ä–∞–±–æ—Ç–∞—é—Ç!');
    console.log('üì± –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–¥–µ–∏ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç');
    console.log('üîó –ß–∞—Ç ID: -1002604809855');
    
    console.log('\\nüí° –ï—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å—ë –µ—â—ë –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ migration –ø—Ä–∏–º–µ–Ω–µ–Ω–∞: supabase db reset');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Edge Function –≤ Supabase Dashboard');
    console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç -1002604809855');
    
  } else {
    console.log('\\n‚ùå –ü–†–û–ë–õ–ï–ú–´ –Ω–∞–π–¥–µ–Ω—ã:');
    
    if (!edgeFunctionTest) {
      console.log('üí° Edge Function –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏');
      console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ /workspace/supabase/functions/telegram-notify/');
      console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Supabase Dashboard');
    }
    
    if (!triggerTest) {
      console.log('üí° Database Trigger –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      console.log('   - –ü—Ä–∏–º–µ–Ω–∏—Ç–µ migration: supabase db push');
      console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª migration –≤ /workspace/supabase/migrations/');
    }
  }
  
  console.log('='.repeat(60));
}

// –ó–∞–ø—É—Å–∫
runIdeaTelegramTests().catch(error => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
});