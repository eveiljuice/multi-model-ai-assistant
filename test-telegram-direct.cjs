const fetch = require('node-fetch');

const TELEGRAM_BOT_TOKEN = '7788182965:AAEiUmRg4l_HvaV3honhiVZluu_gFadOcrA';
const TELEGRAM_CHAT_ID = '-1002604809855';

async function sendTelegramMessage(text) {
  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: text,
        parse_mode: 'HTML',
        disable_web_page_preview: true,
      }),
    });

    if (!response.ok) {
      const errorData = await response.json();
      console.error('‚ùå Telegram API error:', errorData);
      return false;
    }

    const result = await response.json();
    console.log('‚úÖ Telegram message sent:', result.result.message_id);
    return true;
  } catch (error) {
    console.error('‚ùå Failed to send Telegram message:', error);
    return false;
  }
}

async function testPaymentNotification() {
  const message = `üí∞ <b>–¢–ï–°–¢: –ù–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞ –≤ Donein5!</b>

üõí <b>–¢–∏–ø:</b> –†–∞–∑–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞ (—Ç–µ—Å—Ç)
üíµ <b>–°—É–º–º–∞:</b> $1.00
‚ö° <b>–ö—Ä–µ–¥–∏—Ç—ã:</b> 10
üíé <b>–¶–µ–Ω–∞ –∑–∞ –∫—Ä–µ–¥–∏—Ç:</b> $0.100

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b>
   üìß test@donein5.com
   üÜî test-user-123

üßæ <b>Stripe Session:</b> <code>cs_test_123456</code>
üïê <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}

---
<i>üí´ –¢–ï–°–¢: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ Donein5 Payment System</i>`;

  console.log('üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram...');
  const success = await sendTelegramMessage(message);
  
  if (success) {
    console.log('üéâ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram —á–∞—Ç.');
  } else {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.');
  }
  
  return success;
}

async function testSubscriptionNotification() {
  const message = `üîÑ <b>–¢–ï–°–¢: –†–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –ø–æ–¥–ø–∏—Å–∫–∏</b>

üí∞ <b>–°—É–º–º–∞:</b> $29.00
‚ö° <b>–ö—Ä–µ–¥–∏—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã:</b> 250

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b>
   üìß test-subscription@donein5.com
   üÜî test-sub-user-456

üßæ <b>Invoice ID:</b> <code>in_test_123456</code>
üîÑ <b>Subscription ID:</b> <code>sub_test_789</code>
üïê <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}

---
<i>üí´ –¢–ï–°–¢: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ Donein5 Payment System</i>`;

  console.log('üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ –≤ Telegram...');
  const success = await sendTelegramMessage(message);
  
  if (success) {
    console.log('üéâ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
  } else {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ.');
  }
  
  return success;
}

async function testEdgeFunction() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Edge —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é...');
    
    const testData = {
      record: {
        id: 'test-idea-123',
        title: '–¢–µ—Å—Ç–æ–≤–∞—è –∏–¥–µ—è',
        description: '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–¥–µ–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
        category: 'other',
        priority: 'low',
        user_id: 'test-user',
        created_at: new Date().toISOString()
      }
    };

    const response = await fetch('https://sgzlhcagtesjazvwskjw.supabase.co/functions/v1/telegram-notify', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNnemxoY2FndGVzamF6dndza2p3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEyMjY1NTAsImV4cCI6MjA2NjgwMjU1MH0.FyANbeHq6ju5rk6dpjqMHhrmIT2wGna7ixTLpUG_u90'
      },
      body: JSON.stringify(testData)
    });

    const result = await response.json();
    console.log('üìã –û—Ç–≤–µ—Ç Edge —Ñ—É–Ω–∫—Ü–∏–∏:', result);
    
    return response.ok;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Edge —Ñ—É–Ω–∫—Ü–∏–∏:', error.message);
    return false;
  }
}

async function main() {
  const args = process.argv.slice(2);
  const command = args[0] || 'payment';
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n');
  
  try {
    if (command === 'subscription') {
      await testSubscriptionNotification();
    } else if (command === 'edge') {
      await testEdgeFunction();
    } else {
      await testPaymentNotification();
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

main(); 